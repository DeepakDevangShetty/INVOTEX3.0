# -*- coding: utf-8 -*-
"""Kodikon3.0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1omgLbkTwC1vhl9X9Pud8zn0oG7uKrJPi
"""

import pandas as pd

#classification of UPI Transactions

data = pd.read_csv('transactional_data.csv')


upi_transactions = data[data['MODE OF PAYMENT'] == 'UPI']

upi_transactions.to_csv('classified_upi_transactions.csv')

#Classify as merchant out of UPI details.

upi_data = pd.read_csv('upi_data.csv')


merchant_rule = upi_data['ACCOUNT TYPE'] == 'Merchant'


merchant_details = upi_data[merchant_rule]



merchant_details.to_csv('clasified_as_merchant.csv', index=False)

#Combining upi_transactions and merchant details by phone number.

merchant_transactions = pd.read_csv('clasified_as_merchant.csv')
upi_transactions = pd.read_csv('classified_upi_transactions.csv')


combined_data = pd.merge(upi_transactions, merchant_details, on='PHONE NUMBER', how='inner')


combined_data.to_csv('merchant_bankupi_transactions.csv', index=False)

#Classfying PAN details from Trasactional data based on merchant,UPI transaction.

combined_data = pd.read_csv('merchant_bankupi_transactions.csv')
transactional_data = pd.read_csv('transactional_data.csv')


column_name = 'PAN'


combined_data[column_name] = transactional_data[column_name]

combined_data.to_csv('withPAN_combined_data.csv', index=False)

#combined data consists of all merchant UPI transactions with PAN.

#Adding GSTIN to transactions comparing with GST Data

gst_data_load=pd.read_csv('GST_data.csv')
combined_data_load=pd.read_csv('withPAN_combined_data.csv')

grouped_data = pd.merge(combined_data, gst_data_load, on='PAN', how='inner')

grouped_data.to_csv('grouped_data.csv', index=False)

#Fetching Certain features and comoaring with GST Data

grouped_data['Compliance'] = grouped_data['GSTIN'].notnull().apply(lambda x: 'YES' if x else 'NO')


selected_features = ['PAN', 'GSTIN', 'PHONE NUMBER', 'UPI ID ', 'ACCOUNT NUMBER_x', 'Compliance']


new_data = grouped_data[selected_features]


new_data.to_csv('finalresult.csv', index=False)

